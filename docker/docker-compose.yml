version: "2"
services:

  redis:
    container_name: bbt-template-redis
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    networks:
      - bbt-development

  redisinsight:
    container_name: bbt-template-red-insight
    image: redislabs/redisinsight:latest
    ports:
      - '5501:8001'
    volumes:
      - redisinsight:/db
    restart: unless-stopped
    networks:
      - bbt-development

  zeebe:
    container_name: bbt-template-zeebe
    image: camunda/zeebe:latest
    environment:
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://bbt-template-elastic:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1
      - ZEEBE_LOG_LEVEL=debug
      - ZEEBE_REDIS_REMOTE_ADDRESS=redis://bbt-template-redis:6379
      - ZEEBE_REDIS_TIME_TO_LIVE_IN_SECONDS=900
    depends_on:
      - elastic
      - redis
    ports:
      - "26500:26500"
      - "9600:9600"
    volumes:
      - ./config/zeebe-config.yaml:/usr/local/zeebe/config/application.yaml
      - ./zeebe-exporters/zeebe-redis-exporter-0.9.2-jar-with-dependencie.jar:/usr/local/zeebe/exporters/zeebe-redis-exporter-jar-with-dependencies.jar
    networks:
      - bbt-development

  operate:
    container_name: bbt-template-zeebe-operate
    image: camunda/operate:latest
    ports:
      - "8081:8080"
    environment:
      - CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS=bbt-template-zeebe:26500
      - CAMUNDA_OPERATE_ELASTICSEARCH_URL=http://bbt-template-elastic:9200
      - CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL=http://bbt-template-elastic:9200
    networks:
      - bbt-development
    depends_on:
      - zeebe
      - elastic

  postgres:
    container_name: bbt-template-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - bbt-development

  pgadmin:
    container_name: bbt-template-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "info@info.com"
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5502:80"
    restart: unless-stopped
    networks:
      - bbt-development

  elastic:
    container_name: bbt-template-elastic
    image: elasticsearch:8.8.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - bbt-development
    ports:
      - 9200:9200

  # kibana:
  #   container_name: bbt-template-kibana
  #   image: kibana:8.8.1
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://bbt-template-elastic:9200
  #   networks:
  #     - bbt-development
  #   depends_on:
  #     - elastic
  #   ports:
  #     - 5601:5601

  vault:
    container_name: bbt-template-vault
    image: vault:1.13.3
    restart: on-failure:10
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8200'
      VAULT_API_ADDR: 'https://0.0.0.0:8200'
      VAULT_DEV_ROOT_TOKEN_ID: 'admin'
      VAULT_TOKEN: 'admin'
    volumes:
      - ./file:/vault/file
    cap_add:
      - IPC_LOCK
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="admin"
    networks:
      - bbt-development

  vault-prepopulate:
    image: alpine/curl:latest
    depends_on:
      - vault
    volumes:
      - ./vault.sh:/usr/local/bin/prepopulate_vault.sh
    command: [ "sh", "-c", "/usr/local/bin/prepopulate_vault.sh" ]
    networks:
      - bbt-development

  zipkin:
    container_name: bbt-template-zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - bbt-development

  prometheus:
    container_name: bbt-template-prometheus
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus.yml"
    volumes:
      - ./config/prometheus:/etc
    ports:
      - "9090:9090"
    networks:
      - bbt-development

  grafana:
    container_name: bbt-template-grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - bbt-development
    depends_on:
      - prometheus

  placement:
    image: daprio/dapr:latest
    command:
      [
        "./placement",
        "-port",
        "50006",
        "log-level",
        "debug",
        "--log-as-json"
      ]
    ports:
      - "50006:50006"
    networks:
      - bbt-development

  zookeeper:

    image: confluentinc/cp-zookeeper

    container_name: boarding-zookeeper

    ports:

      - "2181:2181"

    environment:

      - ZOOKEEPER_CLIENT_PORT=2181

      - ZOOKEEPER_TICK_TIME=2000

 

  kafka:

    image: confluentinc/cp-kafka

    container_name: boarding-kafka

    depends_on:

      - zookeeper

    ports:

      - "9092:9092"

      - "9997:9997"

    environment:

      KAFKA_BROKER_ID: 1

      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://boarding-kafka:29092,PLAINTEXT_HOST://localhost:9092

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1

      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1

      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

      KAFKA_JMX_PORT: 9997

      KAFKA_JMX_HOSTNAME: kafka

 

  kafka-connect:

      image: confluentinc/cp-kafka-connect

      container_name: boarding-kafka-connect

      depends_on:

        - kafka

      ports:

        - "8083:8083"

      environment:

        - CONNECT_BOOTSTRAP_SERVERS=boarding-kafka:29092

        - CONNECT_REST_ADVERTISED_HOST_NAME=boarding-kafka-connect

        - CONNECT_REST_PORT=8083

        - CONNECT_GROUP_ID=compose-connect-group

        - CONNECT_CONFIG_STORAGE_TOPIC=connect-configs

        - CONNECT_OFFSET_STORAGE_TOPIC=connect-offsets

        - CONNECT_STATUS_STORAGE_TOPIC=connect-status

        - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1

        - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1

        - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1

        - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter

        - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter

        - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter

        - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter

      command:

        - bash

        - -c

        - |

          confluent-hub install --no-prompt couchbase/kafka-connect-couchbase:4.1.12 \

          && confluent-hub install --no-prompt redis/redis-enterprise-kafka:6.7.4 \

          && /etc/confluent/docker/run

          && confluent local services connect connector load test-couchbase-source --config /etc/kafka/connect/quickstart-couchbase-source.properties \

          && confluent local services connect connector load test-couchbase-sink --config /etc/kafka/connect/quickstart-couchbase-sink.properties

 

 

  kafka-ui:

    container_name: boarding-kafka-ui

    image: provectuslabs/kafka-ui:latest

    ports:

      - 8080:8080

    depends_on:

      - kafka

    environment:

      KAFKA_CLUSTERS_0_NAME: local

      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: boarding-kafka:29092

      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first

      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://boarding-kafka-connect:8083

      DYNAMIC_CONFIG_ENABLED: 'true'

 
networks:
  bbt-development:
    external: true

volumes:
  redis:
  redisinsight:
  postgres:
  pgadmin:
  dapr:
  grafana-data:
  prometheus:


